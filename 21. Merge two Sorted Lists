/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* dummy =new ListNode();
        ListNode* mover=dummy;
        if(!list1 && !list2) return NULL;
        if(!list1) return list2;
        if(!list2) return list1;
        ListNode* l1=list1;
        ListNode* l2=list2;
        while(l1 && l2){
            if( l1->val<=l2->val){
                mover->next=l1;
                mover=mover->next;
                l1=l1->next;
            }
            else if(l2->val<l1->val){
                mover->next=l2;
                mover=mover->next;
                l2=l2->next;
            }
        }
        while(l1){
            mover->next=l1;
            mover=mover->next;
            l1=l1->next;
        }
        while(l2){
            mover->next=l2;
            mover=mover->next;
            l2=l2->next;
        }
        return dummy->next;

    }
};
