/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
private:
    void add(ListNode* l1, ListNode* l2,int carry, ListNode* mover){
        if(!l1 && !l2 && !carry) return ;
        ListNode* temp= new ListNode(0);
        int val=0;
        if(l1) val+=l1->val;
        if(l2)val+=l2->val;
        if(carry)val+=carry;
        temp->val=val%10;
        mover->next=temp;
        mover=mover->next;
        add(l1?l1->next:nullptr,l2?l2->next:nullptr,val/10,mover);
    }
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(!l1 && !l2) return l1;
        if(!l1 && l2) return l2;
        if(!l2 && l1) return l1;
        int carry=0;
        ListNode* dummy= new ListNode(0);
        ListNode* mover=dummy;
        add(l1,l2,carry,mover);
        return dummy->next;
    }
};
