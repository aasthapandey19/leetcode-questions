class Solution {
public:
    bool wordPattern(string pattern, string s) {
        stringstream ss(s);
        vector<string>v;
        string word;
        while(ss>>word){
            v.push_back(word);
        }
        int i=0;
        int j=0;
        unordered_map<char,string>mp1;
        unordered_map<string,char>mp2;
        if(pattern.length()!=v.size()) return false;
        for(i=0,j=0;i<pattern.length(),j<v.size();i++,j++){
            if(mp1.find(pattern[i])!=mp1.end() && mp1[pattern[i]]!=v[j]) return false;
            mp1[pattern[i]]=v[j];
            if(mp2.find(v[j]) != mp2.end() && mp2[v[j]]!=pattern[i]) return false;
            mp2[v[j]]=pattern[i];
        }
        return true;
    }
};
